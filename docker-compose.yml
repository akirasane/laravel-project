version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - order_management_network
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: order_management_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
      - ./docker/nginx/ssl/:/etc/ssl/certs
    networks:
      - order_management_network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: order_management_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-order_management}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - order_management_network

  redis:
    image: redis:7-alpine
    container_name: order_management_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - order_management_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - order_management_network
    depends_on:
      - mysql
      - redis

  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_websocket
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "6001:6001"
    volumes:
      - ./:/var/www/html
    command: php artisan websockets:serve --host=0.0.0.0 --port=6001
    networks:
      - order_management_network
    depends_on:
      - mysql
      - redis

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: php artisan schedule:work
    networks:
      - order_management_network
    depends_on:
      - mysql
      - redis

networks:
  order_management_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local