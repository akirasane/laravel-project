version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_app_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_DATABASE=order_management_dev
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
    networks:
      - order_management_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  nginx:
    image: nginx:alpine
    container_name: order_management_nginx_dev
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
    networks:
      - order_management_network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: order_management_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: order_management_dev
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3307:3306"
    networks:
      - order_management_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: order_management_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - order_management_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_queue_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - REDIS_HOST=redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - order_management_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_websocket_dev
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "6001:6001"
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - REDIS_HOST=redis
    command: php artisan websockets:serve --host=0.0.0.0 --port=6001
    networks:
      - order_management_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_scheduler_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - REDIS_HOST=redis
    command: php artisan schedule:work
    networks:
      - order_management_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  # Development tools
  mailpit:
    image: axllent/mailpit
    container_name: order_management_mailpit_dev
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - order_management_network

networks:
  order_management_network:
    driver: bridge

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local